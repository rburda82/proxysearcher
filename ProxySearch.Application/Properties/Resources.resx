<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AllSettingsWillBeRevertedToTheirDefaults" xml:space="preserve">
    <value>All settings will be reverted to their defaults. Do you want to continue?</value>
  </data>
  <data name="BuiltInGeoIPDescription" xml:space="preserve">
    <value>Built in Geo IP, This option is good choice, but GeoIP data could be not latest and searching take some processor time</value>
  </data>
  <data name="BuiltInGeoIPName" xml:space="preserve">
    <value>Built in</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Cancelling" xml:space="preserve">
    <value>Cancelling</value>
  </data>
  <data name="CannotFindInstallationUrl" xml:space="preserve">
    <value>Cannot find installation url of Proxy Searcher</value>
  </data>
  <data name="CannotUpdateProgram" xml:space="preserve">
    <value>Cannot update program. Do you want to do it manually?</value>
  </data>
  <data name="Chrome" xml:space="preserve">
    <value>Chrome</value>
  </data>
  <data name="DefaultTabName" xml:space="preserve">
    <value>Custom search</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="DonateLink" xml:space="preserve">
    <value>http://proxysearcher.sourceforge.net/donate.html</value>
  </data>
  <data name="DoYouReallyWantToClearProxyUsageHistory" xml:space="preserve">
    <value>Do you really want to clear proxy usage history?</value>
  </data>
  <data name="DoYouWantToRestartBrowser" xml:space="preserve">
    <value>Browser '{0}' should be restarted in order to set or clear proxy. Do you want to do it now?</value>
  </data>
  <data name="DummyGeoIP" xml:space="preserve">
    <value>Turn off</value>
  </data>
  <data name="DummyGeoIPDescription" xml:space="preserve">
    <value>Turns off Geo IP. It is faster if compare with other options, but it will not give you proxy location</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="ErrorHasHappenedDuringTest" xml:space="preserve">
    <value>Error has happened during test</value>
  </data>
  <data name="FeedbackLink" xml:space="preserve">
    <value>https://sourceforge.net/p/proxysearcher/discussion/yourfeedback/</value>
  </data>
  <data name="Firefox" xml:space="preserve">
    <value>Firefox</value>
  </data>
  <data name="FirstRunArgument" xml:space="preserve">
    <value>/firstrun</value>
  </data>
  <data name="FoundProxiesFormat" xml:space="preserve">
    <value>Found {0} and shown {1} proxies.</value>
  </data>
  <data name="GoogleDotCom" xml:space="preserve">
    <value>http://google.com</value>
  </data>
  <data name="GoogleDotComContent" xml:space="preserve">
    <value>&lt;title&gt;Google&lt;/title&gt;</value>
  </data>
  <data name="GoogleEngineDescription" xml:space="preserve">
    <value>Uses http://google.com site for proxy searching. If you cannot open http://google.com from browser then use other type of search engine</value>
  </data>
  <data name="GridHasNoSorting" xml:space="preserve">
    <value>Grid has no sorting</value>
  </data>
  <data name="HomePageDeveloperLink" xml:space="preserve">
    <value>http://sourceforge.net/projects/proxysearcher/</value>
  </data>
  <data name="HomePageLink" xml:space="preserve">
    <value>http://proxysearcher.sourceforge.net/</value>
  </data>
  <data name="InternetExplorer" xml:space="preserve">
    <value>Internet explorer</value>
  </data>
  <data name="JobCountFormat" xml:space="preserve">
    <value>Job Count {0}</value>
  </data>
  <data name="NewsLink" xml:space="preserve">
    <value>http://sourceforge.net/p/proxysearcher/blog/</value>
  </data>
  <data name="Opera" xml:space="preserve">
    <value>Opera</value>
  </data>
  <data name="ProxyCheckerByUrl" xml:space="preserve">
    <value>By Url</value>
  </data>
  <data name="ProxyCheckerByUrlAndKeywords" xml:space="preserve">
    <value>By Url And Keywords</value>
  </data>
  <data name="ProxyCheckerByUrlAndKeywordsDescription" xml:space="preserve">
    <value>This proxy checker could be useful if you don't have access to http page, but know his url and list of keywords what should be on page. This method is slower if compare with checker by IP:Port, but it filters better. If this checker don't return any results try to change keywords, probably page doesn't contains them. All specified keywords separates with space, all of them should be on the page, as keyword could be specified piece of http code without space(s). Because of content downloading this checker takes internet traffic.</value>
  </data>
  <data name="ProxyCheckerByUrlDescription" xml:space="preserve">
    <value>This proxy checker downloads content of specified url with and without proxy. If contents are similar then proxy is valid and will be returned by checker. This method is slower comparing with checker by IP:Port, but it filters better. If this checker doesn't return any results, try to change accuracy, probably page's content is too dynamic. Because of downloading page, content this checker takes internet traffic.</value>
  </data>
  <data name="ProxySearcherVersionFormat" xml:space="preserve">
    <value>Proxy Searcher {0}.{1}</value>
  </data>
  <data name="Question" xml:space="preserve">
    <value>Question</value>
  </data>
  <data name="QuestionMark" xml:space="preserve">
    <value>?</value>
  </data>
  <data name="Ready" xml:space="preserve">
    <value>Ready</value>
  </data>
  <data name="RoundFormat" xml:space="preserve">
    <value>{0:0.##}</value>
  </data>
  <data name="SearchIsCancelledOnUserRequest" xml:space="preserve">
    <value>Search is cancelled on user request</value>
  </data>
  <data name="SearchIsFinishedProxiesWasFound" xml:space="preserve">
    <value>Search is finished. {0} proxies was found</value>
  </data>
  <data name="SearchIsFinishedProxiesWasNotFound" xml:space="preserve">
    <value>Search is finished. No proxy was found. Change search query and try again</value>
  </data>
  <data name="ShutdownArgument" xml:space="preserve">
    <value>/shutdown</value>
  </data>
  <data name="SimpleProxyChecker" xml:space="preserve">
    <value>By IP:Port</value>
  </data>
  <data name="SimpleProxyCheckerDescription" xml:space="preserve">
    <value>This simple checker sees if ip address of candidate is alive and port is opened. Can be used for any proxy type searching. It is fast because it don't require any external services. It cannot check if candidate is workable proxy, therefore it would return unworkable proxies.</value>
  </data>
  <data name="GoogleDotComUrl" xml:space="preserve">
    <value>http://google.com</value>
  </data>
  <data name="SortTypeIsNotSupported" xml:space="preserve">
    <value>Sort type by '{0}' is not supported</value>
  </data>
  <data name="SpeedRespondTextFormat" xml:space="preserve">
    <value>{0} ({1})</value>
  </data>
  <data name="SpeedRespondTooltipFormat" xml:space="preserve">
    <value>Speed: {1} Mb/s
Response time: {0} s</value>
  </data>
  <data name="TicketsLink" xml:space="preserve">
    <value>https://sourceforge.net/p/proxysearcher/tickets/</value>
  </data>
  <data name="Uninstalling" xml:space="preserve">
    <value>Uninstalling</value>
  </data>
  <data name="UpdateIsReadyToInstall" xml:space="preserve">
    <value>New version of Proxy Searcher is available. Do you want to get it now?</value>
  </data>
  <data name="WaitUntilCurrentOperationIsFinished" xml:space="preserve">
    <value>Wait until current operation is finished</value>
  </data>
  <data name="WebServiceNetGeoIPService" xml:space="preserve">
    <value>http://www.webservicex.net/geoipservice.asmx</value>
  </data>
  <data name="WebServiceNetGeoIPServiceDescription" xml:space="preserve">
    <value>Uses http://www.webservicex.net/geoipservice.asmx service as Geo IP. If you cannot open http://www.webservicex.net/geoipservice.asmx from browser, use other type of Geo IP</value>
  </data>
  <data name="YouShouldClearValueBeforeSetNewOne" xml:space="preserve">
    <value>You should clear value before set new one</value>
  </data>
  <data name="FolderSearchEngine" xml:space="preserve">
    <value>Search in folder</value>
  </data>
  <data name="FolderSearchEngineDescription" xml:space="preserve">
    <value>If you have folder what contains files with proxies inside in the format [ip]:[port] you could select this search engine. Unfortunately it cannot discover new proxies, but it will check if proxies from files in selected folder are workable. This search engine will work fine together with export feature.</value>
  </data>
  <data name="UrlListEngine" xml:space="preserve">
    <value>By Url List</value>
  </data>
  <data name="UrlListEngineDescription" xml:space="preserve">
    <value>If you have list of urls what contains text with proxies in the format [ip]:[port] you could select this search engine. Unfortunately it cannot discover new sources of proxies, but it will be able to find new proxies if they appear on page.</value>
  </data>
  <data name="DoYouReallyWantToClearBlacklist" xml:space="preserve">
    <value>Do you really want to clear blacklist?</value>
  </data>
  <data name="Google" xml:space="preserve">
    <value>HTTP (Google)</value>
  </data>
  <data name="HttpOpen" xml:space="preserve">
    <value>Open findings as HTTP</value>
  </data>
  <data name="TurnedOffProxyChecker" xml:space="preserve">
    <value>Check manually after search</value>
  </data>
  <data name="TurnedOffProxyCheckerDetails" xml:space="preserve">
    <value>This proxy checker type retrieves all proxies without filtering. It could be useful of opening results from previous searches.</value>
  </data>
  <data name="HttpPredefinedUrlList" xml:space="preserve">
    <value>HTTP (list of urls)</value>
  </data>
  <data name="Information" xml:space="preserve">
    <value>Information</value>
  </data>
  <data name="YouCannotDeleteLastSearchSettings" xml:space="preserve">
    <value>You cannot delete last search settings.</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="world128x128" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\world128x128.ico;System.Drawing.Icon, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="HttpProxyType" xml:space="preserve">
    <value>HTTP</value>
  </data>
  <data name="HttpProxyTypeDescription" xml:space="preserve">
    <value>This type allows to find http proxies</value>
  </data>
  <data name="SocksGoogleSearchType" xml:space="preserve">
    <value>SOCKS (Google)</value>
  </data>
  <data name="SocksProxyType" xml:space="preserve">
    <value>SOCKS</value>
  </data>
  <data name="SocksProxyTypeDesciption" xml:space="preserve">
    <value>This type allows to find socks proxies</value>
  </data>
  <data name="CannotSetProxyForFirefoxWhenSocksVersionIsNotDefined" xml:space="preserve">
    <value>Cannot set sock proxy for Firefox when socks version is not defined</value>
  </data>
  <data name="WikipediaDotOrgUrl" xml:space="preserve">
    <value>http://www.wikipedia.org/</value>
  </data>
  <data name="ThisClientDoesntSupportSocks5Proxies" xml:space="preserve">
    <value>This client doesn't support socks v5 proxies</value>
  </data>
  <data name="TypeOfProxyIsNotDefinedDoYouWantToContinue" xml:space="preserve">
    <value>Type of proxy is not defined and this client doesn't support socks v5 proxies, so socks v5 will not work if you set proxy. Do you want to continue?</value>
  </data>
  <data name="SocksOpen" xml:space="preserve">
    <value>Open findings as Socks</value>
  </data>
  <data name="SocksPredefinedUrlList" xml:space="preserve">
    <value>Socks (list of urls)</value>
  </data>
  <data name="WikipediaContent" xml:space="preserve">
    <value>&lt;title&gt;Wikipedia&lt;/title&gt;</value>
  </data>
  <data name="GoogleDetectsSendingOfAutomaticQueries" xml:space="preserve">
    <value>Google detects that your network sends automatic queries therefore this search type won't work at this moment. You could use search by list of urls which is not using google engine or try again later.</value>
  </data>
  <data name="Closed" xml:space="preserve">
    <value>Closed</value>
  </data>
  <data name="Started" xml:space="preserve">
    <value>Started</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="SearchCancelled" xml:space="preserve">
    <value>Search cancelled</value>
  </data>
  <data name="SearchFinished" xml:space="preserve">
    <value>Search finished</value>
  </data>
  <data name="SearchStarted" xml:space="preserve">
    <value>Search started</value>
  </data>
  <data name="Installed" xml:space="preserve">
    <value>Installed</value>
  </data>
  <data name="ShareCheckBox" xml:space="preserve">
    <value>ShareStatistic</value>
  </data>
  <data name="FoundAndShownProxiesFormat" xml:space="preserve">
    <value>Found and shown {0} proxies.</value>
  </data>
  <data name="DoYouReallyWantToDeleteThisParseMethod" xml:space="preserve">
    <value>Do you really want to delete this parse method?</value>
  </data>
  <data name="TestUrlDoesntMatchDefinedUrl" xml:space="preserve">
    <value>Test url doesn't match defined url</value>
  </data>
  <data name="NoOneProxyHasBeenFound" xml:space="preserve">
    <value>No proxy has been found</value>
  </data>
  <data name="AllSites" xml:space="preserve">
    <value>&lt;all sites&gt;</value>
  </data>
  <data name="AdvertisingClosed" xml:space="preserve">
    <value>Advertising closed</value>
  </data>
  <data name="AdvertisingOpenedInBrowser" xml:space="preserve">
    <value>Advertising opened in browser</value>
  </data>
  <data name="SearchInitialization" xml:space="preserve">
    <value>Search initialization</value>
  </data>
  <data name="PreparingApplication" xml:space="preserve">
    <value>Preparing search application</value>
  </data>
  <data name="PreparingGeoIpService" xml:space="preserve">
    <value>Preparing geo ip service</value>
  </data>
  <data name="PreparingProxyChecker" xml:space="preserve">
    <value>Preparing proxy checker</value>
  </data>
  <data name="PreparingProxyProvider" xml:space="preserve">
    <value>Preparing proxy provider</value>
  </data>
  <data name="ReadingConfigurationOfSelectedSearch" xml:space="preserve">
    <value>Reading configuration of selected search</value>
  </data>
  <data name="Parallel" xml:space="preserve">
    <value>Parallel</value>
  </data>
  <data name="ParallelDescription" xml:space="preserve">
    <value>This search engine allows to combine a few other engines in one search criteria and run them simultaneously. Use it if you want to get benefits from a few different search engines in one search criteria.</value>
  </data>
  <data name="OldConfigurationException" xml:space="preserve">
    <value>It looks like configuration of Proxy Searcher is not up-to-date. In order to fix that error open Tools-&gt;Settings and press 'Restore defaults' button on General tab.</value>
  </data>
  <data name="NameOfCountryWasDeterminedBasedOnOutgoingAddress" xml:space="preserve">
    <value>Name of country was determined based on outgoing IP address '{0}'
which is different from ingoing IP address '{1}'.</value>
  </data>
  <data name="IPAddressDescriptionFormat" xml:space="preserve">
    <value>Incoming IP address: {0}
Outgoing IP address: {1}</value>
  </data>
  <data name="Undetermined" xml:space="preserve">
    <value>Undetermined</value>
  </data>
  <data name="ManualUpdateProxyType" xml:space="preserve">
    <value>Manual update proxy type</value>
  </data>
  <data name="EventLogSource" xml:space="preserve">
    <value>Application</value>
  </data>
  <data name="ObjectOfTypeIsNotSetYet" xml:space="preserve">
    <value>Object of type '{0}' is not set yet</value>
  </data>
  <data name="ProxySearcherSource" xml:space="preserve">
    <value>Proxy Searcher</value>
  </data>
  <data name="AndMoreFormat" xml:space="preserve">
    <value>... and on {0} more</value>
  </data>
  <data name="ProxySearcherStaticHtml" xml:space="preserve">
    <value>http://proxysearcher.sourceforge.net/static.html</value>
  </data>
  <data name="ProxySearcherStaticHtmlContent" xml:space="preserve">
    <value>A41B9664-9DF7-4EB5-8761-D56762497A44</value>
  </data>
</root>